// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  	provider = "prisma-client-js"
	previewFeatures = ["driverAdapters"]
}

datasource db {
  	provider = "sqlite"
  	url      = "file:./dev.db"
}

model User {
	id			Int			@id @default(autoincrement())
	username	String		@unique
	role		String
	name		String
	avatar		String
	password	String
	created_at	DateTime?	@default(now())
}

model Shipping {
	id			Int			@id @default(autoincrement())
	name		String
	logo		String
	cost		Int
	status		Boolean		@default(true)

	orders      Order[]
}

model Product {
	id				Int 		@id @default(autoincrement())
	name			String
	description		String
	photo			String
	highlight		String?
	stock			Int
	price			Int
	discount		Int?
	discount_price	Int?
	weight			Int
	type			String
	is_active		Boolean		@default(true)
	is_highlight	Boolean?

	review			Review[]
	purchased_product	Purchased_Product[]
	roasted_beans   Roasted_Beans_Product?
}

model Review {
	id			Int			@id() @default(autoincrement())
	name		String
	location	String
	rating		Int
	content		String
	date		DateTime	@default(now())
	is_hidden	Boolean

	product		Product		@relation(fields: [product_id], references: [id])
	product_id	Int
}

model Roasted_Beans_Product {
	id				Int		@id @default(autoincrement())
	origin			String
	process			String
	test_notes		String
	packaging		String

	product			Product @relation(fields: [product_id], references: [id])
	product_id		Int		@unique
	serving_recommendation	Serving_Recomendation[]
}

model Serving_Recomendation {
	id							Int		@id @default(autoincrement())
	name						String
	description					String
	roasted_beans_product		Roasted_Beans_Product	@relation(fields: [roasted_beans_product_id], references: [id])
	roasted_beans_product_id	Int
}

model Order {
	id				Int		@id @default(autoincrement())
	buyer_name		String
	whatsapp_number	Int
	address			String
	courier_notes	String?
	notes			String
	status			String
	tracking_number	String
	shipping_cost	Int
	date			DateTime	@default(now())
	payment_method	String

	purchasedProduct	Purchased_Product[]

	shipping_data	Shipping	@relation(fields: [shipping_id], references: [id])
	shipping_id		Int
}

model Purchased_Product {
	id				Int		@id @default(autoincrement())
	name			String
	type			String
	price			Int
	weight			Int
	quantity		Int

	order_data		Order		@relation(fields: [order_id], references: [id])
	order_id		Int
	product_data	Product		@relation(fields: [product_id], references: [id])
	product_id		Int
}